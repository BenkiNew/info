
user nginx;
worker_processes 1;

pid /var/run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
worker_connections 1024;
}

http {
include /etc/nginx/mime.types;
default_type application/octet-stream;

log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
access_log  /var/log/nginx/access.log  main;
error_log /var/log/nginx/error.log;

sendfile on;
tcp_nopush on;
tcp_nodelay on;
keepalive_timeout 65;
                                                
server {
        listen 80;
		listen [::]:80;
        server_name www.benkinew.info;
        rewrite ^ http://benkinew.info$request_uri? permanent;
        
    listen 443 ssl http2; 
	listen [::]:443 ssl http2;
	ssl_certificate /etc/letsencrypt/live/benkinew.info/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/benkinew.info/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot

}

# my sait
server {
        listen 80;
		listen [::]:80;
        server_name benkinew.info;
        root  /var/www/benkinew.info/public_html;
        index index.html index.htm;
        
#access_log /var/www/benkinew.info/public_html/log/access.log main;
#error_log /var/www/benkinew.info/public_html/log/error.log;

                        location / {
try_files $uri $uri/ =404;
		}
		location ~* ^.+.(js|css|png|jpg|jpeg|gif|ico)$ {
		 access_log off;
		expires max;
		}

location = /favicon.ico {
             log_not_found off;
              access_log off;
              }
              location = /robots.txt {
              allow all;
               log_not_found off;
               access_log off;
                }
         location ~ /\.ht {
              deny all;
              }

    listen 443 ssl http2;# managed by Certbot
	ssl_certificate /etc/letsencrypt/live/benkinew.info/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/benkinew.info/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	
	ssl_dhparam /etc/ssl/certs/dhparam.pem; #@4096

	#CIPHERS
	
	#ssl_prefer_server_ciphers on;
		ssl_protocols TLSv1.3;
	#ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA;

	#ssl_session_timeout  10m;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off; 
		
	#resolver $DNS-IP-1 $DNS-IP-2 valid=300s;
	#resolver_timeout 5s; 
	
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Robots-Tag none; 
	
	
	
	# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    #add_header Strict-Transport-Security max-age=15768000;
	add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
	
	# OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;
	
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot

}
                        
}